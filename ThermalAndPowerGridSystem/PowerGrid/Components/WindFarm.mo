within ThermalAndPowerGridSystem.PowerGrid.Components;

model WindFarm

  extends Icons.WindTurbine_Icon;
  
  import SI = Modelica.Units.SI;
  
  import Modelica.Constants.pi;
  
  SI.Area turbineRotorSweptArea "Area coverd by turbine blades (m2)";
  SI.Power windPower "Wind Power (W)";
  SI.Power windElectricalPower "Generated Electrical Power (W)";
  SI.Power windElecticalPowerLimited "Generated Electrical Power Limited (W)";

  parameter SI.Radius turbineRotorRadius = 30 "Turbine Rotor Blade Radius";
  parameter SI.Efficiency TurbineGenrationEfficiency = 0.8 " Turbine Electrical Power Generation Efficiency";
  parameter Real numberOfTurbines = 3;
  parameter SI.Power windGeneratedPowerLimit = 2e6 " Wind Generator Power Generation Limit (W)";
  
  Modelica.Blocks.Interfaces.RealInput windPowerPerArea annotation(
    Placement(visible = true, transformation(origin = {-120, 0}, extent = {{-20, -20}, {20, 20}}, rotation = 0), iconTransformation(origin = {-110, -4.44089e-15}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  ThermalAndPowerGridSystem.PowerGrid.Interfaces.ElectricalPort electricalPort annotation(
    Placement(visible = true, transformation(origin = {110, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {110, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
 
algorithm

  if windElectricalPower <= windGeneratedPowerLimit then
    windElecticalPowerLimited:= windElectricalPower;
  elseif windElectricalPower > windGeneratedPowerLimit then
    windElecticalPowerLimited := windGeneratedPowerLimit;
  end if;
    
equation

  windElectricalPower = windPower * TurbineGenrationEfficiency * numberOfTurbines;
  
  turbineRotorSweptArea = pi * turbineRotorRadius ^ 2;

  windPower = windPowerPerArea * turbineRotorSweptArea;
   
  electricalPort.P = - windElecticalPowerLimited;

annotation(
    Icon(graphics = {Text(origin = {0, -120}, extent = {{-100, 10}, {100, -10}}, textString = "%name", fontSize = 10)}),
    Documentation(info = "<html><head></head><body><!--StartFragment--><span style=\"font-size: 12px; font-family: 'DejaVu Sans Mono';\">This component is model of wind farm, where wind turbines are installed for electricity generation from wind.</span><div><span style=\"font-family: 'DejaVu Sans Mono'; font-size: 12px;\"><br></span></div><div><span style=\"font-family: 'DejaVu Sans Mono'; font-size: 12px;\">Wind power limit logic&nbsp;</span><span style=\"color: rgb(32, 33, 36); font-family: 'Google Sans', arial, sans-serif; background-color: rgb(255, 255, 255);\">implement</span><span style=\"color: rgb(32, 33, 36); background-color: rgb(255, 255, 255);\"><font face=\"DejaVu Sans Mono\">ed to limit electricity generated by wind turbine.</font></span></div><div><span style=\"color: rgb(32, 33, 36); background-color: rgb(255, 255, 255);\"><font face=\"DejaVu Sans Mono\">Equation used for electricity generation from wind power is product of&nbsp;</font></span><i><span style=\"font-family: 'DejaVu Sans Mono';\">wind power of wind, turbine generation efficiency, number of turbines,&nbsp;</span><span style=\"font-family: 'DejaVu Sans Mono';\">turbine rotor sweep area.</span></i></div><!--EndFragment--></body></html>"));
end WindFarm;
